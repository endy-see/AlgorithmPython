"""
不用加减乘除做加法
题目：写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号
思路：把二进制的加法用位运算来替代。
1.第一步不考虑进位，对每一位相加。0加0、1加1的结果都是0，0加1、1加0都是1.这个异或的结果一样
2.接着考虑第二位进位，对0加0、0加1、1加0而言，都不会产生进位，只有1加1时会向前产生一个进位
此时可以想象成两个数先做位与运算，然后再向左移动一步。只有两个数都是1的时候，位与得到的结果是1
3.把前两个步骤的结果相加。第三步相加的过程依然是重复前面两步，直到不产生进位位置
"""


# -*- coding:utf-8 -*-
class Solution:
    def Add(self, num1, num2):
        # write code here
        while num2 != 0:
            sum = num1 ^ num2
            jin_wei = (num1 & num2) << 1
            num1 = sum
            num2 = jin_wei

        return num1


obj = Solution()
print(obj.Add(25, 9))